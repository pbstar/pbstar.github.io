import{_ as a,c as e,o as t,as as o}from"./chunks/framework.H5amDuBo.js";const m=JSON.parse('{"title":"方法","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"docs/method.md","filePath":"docs/method.md","lastUpdated":1715927323000}'),r={name:"docs/method.md"},d=o('<h1 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h1><h2 id="play" tabindex="-1">play() <a class="header-anchor" href="#play" aria-label="Permalink to &quot;play()&quot;">​</a></h2><p>开始滚动。如果配置自动开始滚动则初始化后无需调用此方法。</p><h2 id="pause" tabindex="-1">pause() <a class="header-anchor" href="#pause" aria-label="Permalink to &quot;pause()&quot;">​</a></h2><p>暂停滚动。</p><h2 id="reload-e" tabindex="-1">reload(e) <a class="header-anchor" href="#reload-e" aria-label="Permalink to &quot;reload(e)&quot;">​</a></h2><p>重载配置。接受一个配置对象 e，并更新当前实例的配置。</p><h2 id="destroy" tabindex="-1">destroy() <a class="header-anchor" href="#destroy" aria-label="Permalink to &quot;destroy()&quot;">​</a></h2><p>销毁滚动实例，清除定时器并释放资源。</p><h2 id="getstate" tabindex="-1">getState() <a class="header-anchor" href="#getstate" aria-label="Permalink to &quot;getState()&quot;">​</a></h2><p>获取当前状态对象。</p>',11),s=[d];function l(h,i,n,c,p,_){return t(),e("div",null,s)}const f=a(r,[["render",l]]);export{m as __pageData,f as default};
